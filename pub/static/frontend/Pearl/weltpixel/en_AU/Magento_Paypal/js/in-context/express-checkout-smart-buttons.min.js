define(['underscore','paypalInContextExpressCheckout'],function(_,paypal){'use strict';function getFunding(config){return _.map(config,function(name){return paypal.FUNDING[name];});}
return function(clientConfig,element){paypal.Button.render({env:clientConfig.environment,client:clientConfig.client,locale:clientConfig.locale,funding:{allowed:getFunding(clientConfig.allowedFunding),disallowed:getFunding(clientConfig.disallowedFunding)},style:clientConfig.styles,commit:clientConfig.commit,validate:function(actions){clientConfig.rendererComponent.validate(actions);},onClick:function(){clientConfig.rendererComponent.onClick();},payment:function(){var params={'quote_id':clientConfig.quoteId,'customer_id':clientConfig.customerId||'','form_key':clientConfig.formKey,button:clientConfig.button};return new paypal.Promise(function(resolve,reject){clientConfig.rendererComponent.beforePayment(resolve,reject).then(function(){paypal.request.post(clientConfig.getTokenUrl,params).then(function(res){return clientConfig.rendererComponent.afterPayment(res,resolve,reject);}).catch(function(err){return clientConfig.rendererComponent.catchPayment(err,resolve,reject);});});});},onAuthorize:function(data,actions){var params={paymentToken:data.paymentToken,payerId:data.payerID,quoteId:clientConfig.quoteId||'',customerId:clientConfig.customerId||'','form_key':clientConfig.formKey};return new paypal.Promise(function(resolve,reject){clientConfig.rendererComponent.beforeOnAuthorize(resolve,reject,actions).then(function(){paypal.request.post(clientConfig.onAuthorizeUrl,params).then(function(res){clientConfig.rendererComponent.afterOnAuthorize(res,resolve,reject,actions);}).catch(function(err){return clientConfig.rendererComponent.catchOnAuthorize(err,resolve,reject);});});});},onCancel:function(data,actions){clientConfig.rendererComponent.onCancel(data,actions);},onError:function(err){clientConfig.rendererComponent.onError(err);}},element);};});