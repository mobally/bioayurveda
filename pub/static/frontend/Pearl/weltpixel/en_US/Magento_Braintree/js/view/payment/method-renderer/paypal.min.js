define(['jquery','underscore','Magento_Checkout/js/view/payment/default','Magento_Braintree/js/view/payment/adapter','braintreePayPal','braintreePayPalCheckout','Magento_Checkout/js/model/quote','Magento_Checkout/js/model/full-screen-loader','Magento_Checkout/js/model/payment/additional-validators','Magento_Vault/js/view/payment/vault-enabler','Magento_Checkout/js/action/create-billing-address','Magento_Braintree/js/view/payment/kount','mage/translate','Magento_Ui/js/model/messageList'],function($,_,Component,BraintreeAdapter,BraintreePayPal,BraintreePayPalCheckout,quote,fullScreenLoader,additionalValidators,VaultEnabler,createBillingAddress,kount,$t,globalMessageList){'use strict';return Component.extend({defaults:{template:'Magento_Braintree/payment/paypal',code:'braintree_paypal',active:false,grandTotalAmount:null,isReviewRequired:false,paypalCheckoutInstance:null,customerEmail:null,vaultEnabler:null,paymentPayload:{nonce:null},paypalButtonSelector:'[data-container="paypal-button"]',additionalData:{},imports:{onActiveChange:'active'}},initialize:function(){var self=this;self._super();BraintreeAdapter.getApiClient().then(function(clientInstance){return BraintreePayPal.create({client:clientInstance});}).then(function(paypalCheckoutInstance){self.paypalCheckoutInstance=paypalCheckoutInstance;return self.paypalCheckoutInstance;});kount.getDeviceData().then(function(deviceData){self.additionalData['device_data']=deviceData;});this.isReviewRequired(false);return self;},initObservable:function(){var self=this;this._super().observe(['active','isReviewRequired','customerEmail']);this.vaultEnabler=new VaultEnabler();this.vaultEnabler.setPaymentCode(this.getVaultCode());this.vaultEnabler.isActivePaymentTokenEnabler.subscribe(function(){self.onVaultPaymentTokenEnablerChange();});this.grandTotalAmount=quote.totals()['base_grand_total'];quote.totals.subscribe(function(){if(self.grandTotalAmount!==quote.totals()['base_grand_total']){self.grandTotalAmount=quote.totals()['base_grand_total'];}});quote.shippingAddress.subscribe(function(){if(self.isActive()){self.reInitPayPal();}});return this;},getCode:function(){return this.code;},getTitle:function(){return window.checkoutConfig.payment[this.getCode()].title;},isActive:function(){var active=this.getCode()===this.isChecked();this.active(active);return active;},onActiveChange:function(isActive){if(!isActive){return;}
this.reInitPayPal();},setPaymentPayload:function(paymentPayload){this.paymentPayload=paymentPayload;},setBillingAddress:function(customer,address){var billingAddress={street:[address.line1],city:address.city,postcode:address.postalCode,countryId:address.countryCode,email:customer.email,firstname:customer.firstName,lastname:customer.lastName,telephone:customer.phone,regionCode:address.state};billingAddress=createBillingAddress(billingAddress);quote.billingAddress(billingAddress);},beforePlaceOrder:function(payload){this.setPaymentPayload(payload);if(this.isRequiredBillingAddress()||quote.billingAddress()===null){if(typeof payload.details.billingAddress!=='undefined'){this.setBillingAddress(payload.details,payload.details.billingAddress);}else{this.setBillingAddress(payload.details,payload.details.shippingAddress);}}
if(this.isSkipOrderReview()){this.placeOrder();}else{this.customerEmail(payload.details.email);this.isReviewRequired(true);}},reInitPayPal:function(){var self=this;$(self.paypalButtonSelector).html('');return BraintreePayPalCheckout.Button.render({env:this.getEnvironment(),style:{color:'blue',shape:'rect',size:'medium',label:'pay',tagline:false},payment:function(){return self.paypalCheckoutInstance.createPayment(self.getPayPalConfig());},onAuthorize:function(data){return self.paypalCheckoutInstance.tokenizePayment(data).then(function(payload){self.beforePlaceOrder(payload);});},onError:function(){self.showError($t('Payment '+self.getTitle()+' can\'t be initialized'));self.reInitPayPal();}},self.paypalButtonSelector);},getLocale:function(){return window.checkoutConfig.payment[this.getCode()].locale;},isAllowOverrideShippingAddress:function(){return window.checkoutConfig.payment[this.getCode()].isAllowShippingAddressOverride;},isRequiredBillingAddress:function(){return window.checkoutConfig.payment[this.getCode()].isRequiredBillingAddress;},getPayPalConfig:function(){var totals=quote.totals(),config,isActiveVaultEnabler=this.isActiveVault();config={flow:!isActiveVaultEnabler?'checkout':'vault',amount:this.grandTotalAmount,currency:totals['base_currency_code'],locale:this.getLocale(),enableShippingAddress:true,shippingAddressEditable:this.isAllowOverrideShippingAddress()};config.shippingAddressOverride=this.getShippingAddress();if(this.getMerchantName()){config.displayName=this.getMerchantName();}
return config;},getShippingAddress:function(){var address=quote.shippingAddress();if(_.isNull(address.postcode)||_.isUndefined(address.postcode)){return{};}
return{line1:_.isUndefined(address.street)||_.isUndefined(address.street[0])?'':address.street[0],city:address.city,state:address.regionCode,postalCode:address.postcode,countryCode:address.countryId,phone:address.telephone,recipientName:address.firstname+' '+address.lastname};},getMerchantName:function(){return window.checkoutConfig.payment[this.getCode()].merchantName;},getData:function(){var data={'method':this.getCode(),'additional_data':{'payment_method_nonce':this.paymentPayload.nonce}};data['additional_data']=_.extend(data['additional_data'],this.additionalData);this.vaultEnabler.visitAdditionalData(data);return data;},getPaymentAcceptanceMarkSrc:function(){return window.checkoutConfig.payment[this.getCode()].paymentAcceptanceMarkSrc;},getVaultCode:function(){return window.checkoutConfig.payment[this.getCode()].vaultCode;},getEnvironment:function(){return window.checkoutConfig.payment[BraintreeAdapter.getCode()].environment;},isSkipOrderReview:function(){return window.checkoutConfig.payment[this.getCode()].skipOrderReview;},isActiveVault:function(){return this.vaultEnabler.isVaultEnabled()&&this.vaultEnabler.isActivePaymentTokenEnabler();},onVaultPaymentTokenEnablerChange:function(){this.reInitPayPal();},showError:function(errorMessage){globalMessageList.addErrorMessage({message:errorMessage});}});});