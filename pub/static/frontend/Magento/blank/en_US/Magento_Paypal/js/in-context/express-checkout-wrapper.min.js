define(['jquery','mage/translate','Magento_Customer/js/customer-data','Magento_Paypal/js/in-context/express-checkout-smart-buttons','mage/cookies'],function($,$t,customerData,checkoutSmartButtons){'use strict';return{defaults:{paymentActionError:$t('Something went wrong with your request. Please try again later.'),signInMessage:$t('To check out, please sign in with your email address.')},renderPayPalButtons:function(element){checkoutSmartButtons(this.prepareClientConfig(),element);},validate:function(actions){this.actions=actions||this.actions;},onClick:function(){},beforePayment:function(resolve,reject){return $.Deferred().resolve();},afterPayment:function(res,resolve,reject){if(res.success){return resolve(res.token);}
this.addError(res['error_message']);return reject(new Error(res['error_message']));},catchPayment:function(err,resolve,reject){this.addError(this.paymentActionError);reject(err);},beforeOnAuthorize:function(resolve,reject,actions){return $.Deferred().resolve();},afterOnAuthorize:function(res,resolve,reject,actions){if(res.success){resolve();return actions.redirect(window,res.redirectUrl);}
this.addError(res['error_message']);return reject(new Error(res['error_message']));},catchOnAuthorize:function(err,resolve,reject){this.addError(this.paymentActionError);reject(err);},onCancel:function(data,actions){actions.redirect(window,this.clientConfig.onCancelUrl);},onError:function(err){},addError:function(message,type){type=type||'error';customerData.set('messages',{messages:[{type:type,text:message}],'data_id':Math.floor(Date.now()/ 1000)});},getButtonId:function(){return this.inContextId;},prepareClientConfig:function(){this.clientConfig.client={};this.clientConfig.client[this.clientConfig.environment]=this.clientConfig.merchantId;this.clientConfig.rendererComponent=this;this.clientConfig.formKey=$.mage.cookies.get('form_key');return this.clientConfig;}};});